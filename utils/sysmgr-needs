#!/bin/sh

# A simple utility for dependency tracking with sysmgr.

[ "$1" ] || { cat <<EOF
usage: ${0##*/} [dep1] [dep2] [dep...]

sysmgr utility for service dependency tracking.
This program waits until all dependencies are
started with sysmgr.
EOF
              exit 1 ;}

checkprocess() {
    # This is quite similar to the function with the
    # same name on sysmgr, except it gets the pid itself.
    read -r pid < "$RUNDIR/$1/pid"
    [ -d /proc ] || {
        kill -0 "$pid" || return 1
        return 0
    }
    [ -d "/proc/$pid" ] || return 1
    return 0
}

for service in "$@" ; do
    # We parallelize and wait for all checks to pass.
    while :; do [ -r "${RUNDIR:=/run/sysmgr}/${service}/pid" ] && checkprocess "$service" && break ; done &
done; wait
